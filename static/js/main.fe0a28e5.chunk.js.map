{"version":3,"sources":["WeatherCoord.js","App.js","reportWebVitals.js","index.js"],"names":["WeatherCoord","useState","incaming","setIncaming","word","setWord","text","setText","useEffect","navigator","geolocation","getCurrentPosition","position","lat","lon","a","axios","get","res","mydata","id","data","name","description","weather","icon","temp","main","humidity","console","log","fetchData","coords","latitude","longitude","filterText","clickPlace","e","preventDefault","results","map","item","className","src","alt","htmlFor","onSubmit","type","placeholder","value","onChange","target","disabled","toFixed","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe0a28e5.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios';\n\nconst WeatherCoord = () => {\n\nconst [incaming, setIncaming] = useState([]);\nconst [word, setWord] = useState('');\n\nconst [text, setText] = useState('');\n\n\n\nconst coordBring = ()=>{\n\nconst success = (position)=>{\n\n// fetching data function\nconst fetchData= async(lat, lon)=>{\n    try {\n        \n    //    const res = await axios.get(`http://api.openweathermap.org/data/2.5/weather?q=${text}&units=metric&appid=f1185293238812d64fdeb40705065877`)\n\n    const res = await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&units=metric&appid=f1185293238812d64fdeb40705065877`)\n   \n   \n       let mydata = {\n           id:res.data.id,\n           name:res.data.name,\n           description:res.data.weather[0].description,\n           icon:res.data.weather[0].icon,\n           temp:res.data.main.temp,\n           humidity:res.data.main.humidity\n       }\n       \n       setIncaming([mydata])\n   \n   \n   \n   \n    } catch (error) {\n        console.log(error);\n    }\n   \n   }\n\n   fetchData(position.coords.latitude,position.coords.longitude);\n\n}\n\n\nconst error=()=>{\n    console.log('not posible to get data');\n}\n\n\nif(navigator.geolocation){\n    navigator.geolocation.getCurrentPosition(success,error)\n}else{\n    console.log(\"location cannot be supported from browser\");\n}\n\n\n}\n\n\n\n\n\nuseEffect(()=>{\n\n// fetchData();\n\n\n\nif(text===''){\n    coordBring();\n}else{\n\n   filterText(); \n}\n\n},[text])\n\n\nconst handleChange = (e)=>{\n  setWord(e.target.value);\n  console.log(word);\n}\n\nconst clickPlace = async(e)=>{\n\ne.preventDefault();\n\ntry {\n    const res = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${word}&units=metric&appid=f1185293238812d64fdeb40705065877`)\n\n\n    let mydata = {\n        id:res.data.id,\n        name:res.data.name,\n        description:res.data.weather[0].description,\n        icon:res.data.weather[0].icon,\n        temp:res.data.main.temp,\n        humidity:res.data.main.humidity\n    }\n    \n    setIncaming([mydata])\n    setWord('')\n} catch (error) {\n  console.log(error);  \n}\n}\n\n\nconst handleText = (e)=>{\n    setText(e.target.value)\n}\n\n\nconst results = incaming.map((item)=>{\n        \n    if(item.icon==='01n'){\n        return   <img key={item.id} className=\"back\" src=\"https://thumbor.thedailymeal.com/E1su6jFghGSGh4GSFiPDYEfDf_c=/870x565/https://www.theactivetimes.com/sites/default/files/slideshows/109049/113637/03_Clear_moon.jpg\" alt=\"\"/>\n\n    } else if(item.icon==='01d'){\n        return   <img className=\"back\" key={item.id} src=\"https://i.pinimg.com/originals/e1/3a/4d/e13a4d737425141353603f7a3edb73cd.jpg\" alt=\"\"/>\n    }\n\n    else if(item.icon==='10n'){\n        return   <img className=\"back\" key={item.id} src=\"https://media.istockphoto.com/photos/rain-night-picture-id831057314?k=6&m=831057314&s=170667a&w=0&h=Mh8Sp8wfkIjTjcIySplGhksuDBSVxLvLlWrsN0eZ8lY=\" alt=\"\"/>\n    }\n    else if(item.icon==='04n'){\n        return   <img className=\"back\" key={item.id} src=\"https://live.staticflickr.com/5758/22448249491_e3e9ddcddf_b.jpg\" alt=\"\"/>\n    }\n    else if(item.icon==='02d'){\n        return   <img className=\"back\" key={item.id} src=\"https://www.saobserver.net/wp-content/uploads/2019/08/18312467_web1_Mainly-sunny.jpg\" alt=\"\"/>\n    }\n    else if(item.icon==='04d'){\n        return   <img className=\"back\" key={item.id} src=\"https://townsquare.media/site/385/files/2016/08/cloudy-day-3-1376042788goo.jpg?w=980&q=75\" alt=\"\"/>\n    }\n    else if(item.icon==='50d'){\n        return   <img className=\"back\" key={item.id} src=\"https://pcdn.columbian.com/wp-content/uploads/2020/09/Foggy-weather-1226x0-c-default.jpg\" alt=\"\"/>\n    }\n    else if(item.icon==='10d'){\n        return   <img className=\"back\" key={item.id} src=\"https://www.ekathimerini.com/resources/2019-07/rain-thumb-large1-thumb-large.jpg\" alt=\"\"/>\n    }\n    else if(item.icon==='03d'){\n        return   <img className=\"back\" key={item.id} src=\"https://www.publicdomainpictures.net/pictures/110000/velka/scattered-clouds.jpg\" alt=\"\"/>\n    }\n    else if(item.icon==='50n'){\n        return   <img className=\"back\" key={item.id} src=\"https://images.glaciermedia.ca/polopoly_fs/1.23130032.1521742589!/fileImage/httpImage/image.jpg_gen/derivatives/landscape_804/air-quality.jpg\" alt=\"\"/>\n    }\n\n\n    \n   \n   \n})\n\n\nconst filterText = async ()=>{\n    try {\n        \n           const res = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${text}&units=metric&appid=f1185293238812d64fdeb40705065877`)\n    \n       \n           let mydata = {\n               id:res.data.id,\n               name:res.data.name,\n               description:res.data.weather[0].description,\n               icon:res.data.weather[0].icon,\n               temp:res.data.main.temp,\n               humidity:res.data.main.humidity\n           }\n           \n           setIncaming([mydata])\n       \n          setWord('')\n       \n       \n        } catch (error) {\n            console.log(error);\n        }\n}\n\n    return (\n        <div className=\"weather-main\">\n        {/* <img className='back' src=\"https://i.pinimg.com/originals/e1/3a/4d/e13a4d737425141353603f7a3edb73cd.jpg\" alt=\"\"/> */}\n\n        {results}\n\n        <div className=\"wheater-data\">\n\n            <div className=\"input\">\n                <label htmlFor=\"\">Search</label>\n\n\n              <form  onSubmit={clickPlace} >\n\n              <div className=\"input-btn\">\n                \n                <input type=\"text\"\n                placeholder=\"Input city...\"\n               value={word}\n                onChange={handleChange}\n                \n                />\n\n            <button disabled={word===''?true:false} type={\"submit\"} >Submit</button>\n\n              </div>\n              <div className=\"select\">\n             <select value={text} onChange={handleText} >\n             <option value=\"\">Cities</option>\n                <option value=\"athens\">Athens</option>\n                <option value=\"paris\">Paris</option>\n                <option value=\"london\">London</option>\n                <option value=\"berlin\">Berlin</option>\n                <option value=\"los angeles\">Los angeles</option>\n                <option value=\"melbourne\">Melbourne</option>\n                <option value=\"mumbai\">Mumbai</option>\n                <option value=\"oslo\">Oslo</option>\n                <option value=\"amsterdam\">Amsterdam</option>\n\n\n                  </select>\n              </div>\n              </form>\n\n        \n            </div>\n          \n          {incaming.map(item=>(\n                <div className=\"single-wheather\" key={item.id}>\n                <div className=\"city same-single\">\n          <p>{item.name}</p>\n                </div>\n\n        <div className=\"text-icon same-single\">\n    <img src={`https://openweathermap.org/img/wn/${item.icon}.png`} alt=\"\"/><span>{item.temp.toFixed(0)} C °</span>\n        </div>\n\n                <div className=\"situation same-single\">\n          <p>{item.description}</p>\n                </div>\n\n                <div className=\"moisture same-single\">\n          <p>{item.humidity} %</p>\n                </div>\n            </div>\n          ))}\n        </div>\n\n\n        </div>\n    )\n}\n\nexport default WeatherCoord\n\n\n//  api.openweathermap.org/data/2.5/weather?q=London&appid=f1185293238812d64fdeb40705065877\n\n// f1185293238812d64fdeb40705065877\n\n\n// in windows:alt + 0176\n// mac:option +00b0","\nimport './App.css';\n// import Wheather from './Weather';\n// import Wheather1 from './Weather1';\n// import Wheather2 from './Weather2';\nimport WheatherCoord from './WeatherCoord';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     \n      {/* <Wheather /> */}\n      {/* <Wheather1 /> */}\n      {/* <Wheather2 /> */}\n      <WheatherCoord />\n\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}